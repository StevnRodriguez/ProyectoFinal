import { Injectable, Inject, Optional } from '@angular/core';
import { AVATAR_CONFIG } from './avatar-config.token';
import * as i0 from "@angular/core";
class AvatarConfigService {
    constructor(userConfig) {
        this.userConfig = userConfig;
    }
    getAvatarSources(defaultSources) {
        if (this.userConfig &&
            this.userConfig.sourcePriorityOrder &&
            this.userConfig.sourcePriorityOrder.length) {
            const uniqueSources = [...new Set(this.userConfig.sourcePriorityOrder)];
            const validSources = uniqueSources.filter(source => defaultSources.includes(source));
            return [
                ...validSources,
                ...defaultSources.filter(source => !validSources.includes(source))
            ];
        }
        return defaultSources;
    }
    getAvatarColors(defaultColors) {
        return ((this.userConfig &&
            this.userConfig.colors &&
            this.userConfig.colors.length &&
            this.userConfig.colors) ||
            defaultColors);
    }
    getDisableSrcCache(defaultDisableSrcCache) {
        if (this.userConfig == null || this.userConfig.disableSrcCache == null) {
            return defaultDisableSrcCache;
        }
        else {
            return this.userConfig.disableSrcCache;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: AvatarConfigService, deps: [{ token: AVATAR_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: AvatarConfigService, providedIn: 'root' }); }
}
export { AvatarConfigService };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: AvatarConfigService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [AVATAR_CONFIG]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWF2YXRhcnMvc3JjL2xpYi9hdmF0YXItY29uZmlnLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFHdEQsTUFDYSxtQkFBbUI7SUFDOUIsWUFHUyxVQUF3QjtRQUF4QixlQUFVLEdBQVYsVUFBVSxDQUFjO0lBQzlCLENBQUM7SUFFRyxnQkFBZ0IsQ0FBQyxjQUE4QjtRQUNwRCxJQUNFLElBQUksQ0FBQyxVQUFVO1lBQ2YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxtQkFBbUI7WUFDbkMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLEVBQzFDO1lBQ0EsTUFBTSxhQUFhLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO1lBQ3hFLE1BQU0sWUFBWSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FDakQsY0FBYyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FDaEMsQ0FBQztZQUNGLE9BQU87Z0JBQ0wsR0FBRyxZQUFZO2dCQUNmLEdBQUcsY0FBYyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNuRSxDQUFDO1NBQ0g7UUFDRCxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDO0lBRU0sZUFBZSxDQUFDLGFBQXVCO1FBQzVDLE9BQU8sQ0FDTCxDQUFDLElBQUksQ0FBQyxVQUFVO1lBQ2QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNO1lBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU07WUFDN0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUM7WUFDekIsYUFBYSxDQUNkLENBQUM7SUFDSixDQUFDO0lBRU0sa0JBQWtCLENBQUMsc0JBQStCO1FBQ3ZELElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLElBQUksSUFBSSxFQUFFO1lBQ3RFLE9BQU8sc0JBQXNCLENBQUM7U0FDL0I7YUFBTTtZQUNMLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUM7U0FDeEM7SUFDSCxDQUFDOzhHQXpDVSxtQkFBbUIsa0JBR3BCLGFBQWE7a0hBSFosbUJBQW1CLGNBRFAsTUFBTTs7U0FDbEIsbUJBQW1COzJGQUFuQixtQkFBbUI7a0JBRC9CLFVBQVU7bUJBQUMsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDOzswQkFHM0IsUUFBUTs7MEJBQ1IsTUFBTTsyQkFBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgQXZhdGFyU291cmNlIH0gZnJvbSAnLi9zb3VyY2VzL2F2YXRhci1zb3VyY2UuZW51bSc7XHJcbmltcG9ydCB7IEFWQVRBUl9DT05GSUcgfSBmcm9tICcuL2F2YXRhci1jb25maWcudG9rZW4nO1xyXG5pbXBvcnQgeyBBdmF0YXJDb25maWcgfSBmcm9tICcuL2F2YXRhci1jb25maWcnO1xyXG5cclxuQEluamVjdGFibGUoe3Byb3ZpZGVkSW46ICdyb290J30pXHJcbmV4cG9ydCBjbGFzcyBBdmF0YXJDb25maWdTZXJ2aWNlIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBPcHRpb25hbCgpXHJcbiAgICBASW5qZWN0KEFWQVRBUl9DT05GSUcpXHJcbiAgICBwdWJsaWMgdXNlckNvbmZpZzogQXZhdGFyQ29uZmlnXHJcbiAgKSB7fVxyXG5cclxuICBwdWJsaWMgZ2V0QXZhdGFyU291cmNlcyhkZWZhdWx0U291cmNlczogQXZhdGFyU291cmNlW10pOiBBdmF0YXJTb3VyY2VbXSB7XHJcbiAgICBpZiAoXHJcbiAgICAgIHRoaXMudXNlckNvbmZpZyAmJlxyXG4gICAgICB0aGlzLnVzZXJDb25maWcuc291cmNlUHJpb3JpdHlPcmRlciAmJlxyXG4gICAgICB0aGlzLnVzZXJDb25maWcuc291cmNlUHJpb3JpdHlPcmRlci5sZW5ndGhcclxuICAgICkge1xyXG4gICAgICBjb25zdCB1bmlxdWVTb3VyY2VzID0gWy4uLm5ldyBTZXQodGhpcy51c2VyQ29uZmlnLnNvdXJjZVByaW9yaXR5T3JkZXIpXTtcclxuICAgICAgY29uc3QgdmFsaWRTb3VyY2VzID0gdW5pcXVlU291cmNlcy5maWx0ZXIoc291cmNlID0+XHJcbiAgICAgICAgZGVmYXVsdFNvdXJjZXMuaW5jbHVkZXMoc291cmNlKVxyXG4gICAgICApO1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIC4uLnZhbGlkU291cmNlcyxcclxuICAgICAgICAuLi5kZWZhdWx0U291cmNlcy5maWx0ZXIoc291cmNlID0+ICF2YWxpZFNvdXJjZXMuaW5jbHVkZXMoc291cmNlKSlcclxuICAgICAgXTtcclxuICAgIH1cclxuICAgIHJldHVybiBkZWZhdWx0U291cmNlcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRBdmF0YXJDb2xvcnMoZGVmYXVsdENvbG9yczogc3RyaW5nW10pOiBzdHJpbmdbXSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAodGhpcy51c2VyQ29uZmlnICYmXHJcbiAgICAgICAgdGhpcy51c2VyQ29uZmlnLmNvbG9ycyAmJlxyXG4gICAgICAgIHRoaXMudXNlckNvbmZpZy5jb2xvcnMubGVuZ3RoICYmXHJcbiAgICAgICAgdGhpcy51c2VyQ29uZmlnLmNvbG9ycykgfHxcclxuICAgICAgZGVmYXVsdENvbG9yc1xyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXREaXNhYmxlU3JjQ2FjaGUoZGVmYXVsdERpc2FibGVTcmNDYWNoZTogYm9vbGVhbik6IGJvb2xlYW4ge1xyXG4gICAgaWYgKHRoaXMudXNlckNvbmZpZyA9PSBudWxsIHx8IHRoaXMudXNlckNvbmZpZy5kaXNhYmxlU3JjQ2FjaGUgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gZGVmYXVsdERpc2FibGVTcmNDYWNoZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnVzZXJDb25maWcuZGlzYWJsZVNyY0NhY2hlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=